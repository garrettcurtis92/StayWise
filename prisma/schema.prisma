datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  image     String?
  createdAt DateTime @default(now())
  bookings  Booking[]
  accounts  Account[]
  sessions  Session[]
}


model Listing {
  id          String   @id @default(cuid())
  title       String
  description String
  price       Float
  location    String
  latitude    Float?
  longitude   Float?
  createdAt   DateTime @default(now())
  bookings    Booking[]
}

model Booking {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  listing    Listing  @relation(fields: [listingId], references: [id])
  listingId  String
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
}

// NextAuth models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @map("refreshToken")
  access_token      String? @map("accessToken")
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @map("idToken")
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String @unique
  expires    DateTime

  @@unique([identifier, token])
}
